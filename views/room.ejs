<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    <title>Document</title>
</head>

<body>
    <h1 id="roomName"></h1>
    <div id="room">
        <div class="window" id="brainstormWindow">
            <div class="windowHeader" id="brainstormWindowHeader">Brainstorming - New Session</div>
            <div id="selectMethod">
                <p>Select method</p>
                <form>
                    <input type="radio" id="Changeofscenery" name="fav_language" value="Changeofscenery">
                    <label for="Changeofscenery">Change of scenery</label><br>
                    <input type="radio" id="Rapidideation" name="fav_language" value="Rapidideation">
                    <label for="Rapidideation">Rapid ideation</label><br>
                    <input type="radio" id="RoundRobinmethod" name="fav_language" value="RoundRobinmethod">
                    <label for="RoundRobinmethod">Round Robin method</label><br>
                    <input type="radio" id="Stepladdermethod" name="fav_language" value="Stepladdermethod">
                    <label for="Stepladdermethod">Step ladder method</label><br>
                    <input type="radio" id="Mindmapping" name="fav_language" value="Mindmapping">
                    <label for="Mindmapping">Mindmapping</label><br>
                    <input type="radio" id="Brainwriting" name="fav_language" value="Brainwriting">
                    <label for="Brainwriting">Brainwriting</label>
                </form>
                <input type="submit" value="Next" onclick="brainstormNext()">
            </div>
            <div id="selectSubject">
                <p>Enter subject</p>
                <form>
                    <label for="fname">Subject:</label><br>
                    <input type="text" id="subject" name="fname"><br>
                </form>
                <input type="submit" value="Next" onclick="startBrainstorm()">
            </div>
            <div class="video">
                <video id="video" loop></video>
            </div>
        </div>
        <div class="window" id="videoWindow">
            <div id="videoWindowHeader" class="windowHeader">Videochat</div>
            <ul id="participantsList">

            </ul>
        </div>
        <div class="window" id="chatWindow">
            <div id="chatWindowHeader" class="windowHeader">chat</div>
        </div>
    </div>
    <iframe id="login" src="http://jordi.dsmynas.com:3001/" frameborder="0"></iframe>
</body>

<script>
    const ROOM_ID = '<%= roomId %>'
    const userId = '<%= userId %>'
    if (ROOM_ID == "") {
        document.getElementById("room").innerHTML = ""
    }
    $.ajax({
        url: "http://jordi.dsmynas.com:3000/rooms",
        type: 'GET',
        success: function (res) {
            let roomName = res.find(roomName => roomName._id === '<%= roomId %>')
                .roomName;
            document.getElementById("videoWindowHeader").innerHTML = roomName + " - Videocall"
            document.getElementById("chatWindowHeader").innerHTML = roomName + " - Chat"


        }
    });

    const socket = io('/')
    const myPeer = new Peer(userId, {
        host: '/',
        port: '3003'
    })

    myPeer.on('open', id => {
        socket.emit('join-room', ROOM_ID, id)

    })
    socket.on('user-connected', userId => {
        $.ajax({
            url: "http://jordi.dsmynas.com:3000/users",
            type: 'GET',
            success: function (res) {
                let userName = res.find(userName => userName._id === userId)
                    .name;
                console.log(userName)
                document.getElementById("participantsList").innerHTML = document.getElementById(
                        "participantsList").innerHTML + "<li id=" + userId + ">" + userName +
                    "</li>"
                document.getElementById("videoWindowHeader").innerHTML = roomName + " - Videocall"
                document.getElementById("chatWindowHeader").innerHTML = roomName + " - Chat"
            }
        });
    })

    socket.on('user-disconnected', userId => {
        document.getElementById(userId).remove()
    })

    function brainstormNext() {
        document.getElementById('selectMethod').style.display = "none"
        document.getElementById('selectSubject').style.display = "block"
        document.getElementById('brainstormWindowHeader').innerHTML = "Brainstorming - Change of scenery"
    }

    function startBrainstorm() {
        const rndInt = Math.floor(Math.random() * 15) + 1
        fetch("https://api.pexels.com/videos/search?query=" + document.getElementById("subject").value + '"', {
                headers: {
                    Authorization: '563492ad6f91700001000001232ead9c796d4e0cafa29da60d2d6535'
                }
            })
            .then(response => response.json())
            .then(result => emitVideo(result))
            .catch(err => console.log(err))
    }

    function emitVideo(result) {
        socket.emit('videoSend', result)
        const rndInt = Math.floor(Math.random() * 15) + 1
        document.getElementById("selectMethod").style.display = "none"
        document.getElementById("selectSubject").style.display = "none"
        document.getElementById("video").setAttribute('src', result.videos[rndInt].video_files[0].link)
        document.getElementById("video").load()
        document.getElementById("video").play()
    }

    socket.on('videoReceive', result => {
        const rndInt = Math.floor(Math.random() * 15) + 1
        document.getElementById("selectMethod").style.display = "none"
        document.getElementById("selectSubject").style.display = "none"
        document.getElementById("video").setAttribute('src', result.videos[rndInt].video_files[0].link)
        document.getElementById("video").load()
        document.getElementById("video").play()

    })
</script>

</html>
<style>
    * {
        margin: 0px;
        padding: 0px;
        font-family: 'Roboto', sans-serif;
        font-size: 20px;
    }

    #selectMethod {
        padding: 20px;
    }

    .video {
        width: 100%;
        height: 300px;
    }

    video {
        object-fit: contain;
    }

    #selectSubject {
        padding: 20px;
        display: none;
    }

    #brainstormMethod {
        width: 90%;
        height: 75px;
        background-color: white;
        margin-left: 20px;
        border-radius: 5px;
    }


    .window {
        background-color: #ECECEC;
        width: 25%;
        -webkit-box-shadow: 0px 0px 15px 5px rgba(0, 0, 0, 0.36);
        box-shadow: 0px 0px 15px 5px rgba(0, 0, 0, 0.36);
    }

    .windowHeader {
        background-color: white;
        height: 40px;

        display: flex;
        align-items: center;
        padding-left: 10px;
    }

    #videoWindow {
        width: 40%;
    }

    #room {
        width: 100%;
        padding: 30px;
        display: flex;
        justify-content: space-around;
    }

    body {
        display: flex;
        flex-direction: row-reverse;
        justify-content: space-between;
        height: 100vh;
        width: 100vw;
    }


    #login {
        height: 100%
    }

    #video-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, 300px);
        grid-auto-rows: 300px;
    }

    video {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    ul {
        padding: 50px;
    }
</style>